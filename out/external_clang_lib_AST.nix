{ cc_library_static }:
let

libclangAST = cc_library_static {
    name = "libclangAST";
    defaults = ["clang-defaults"];
    srcs = [
        "APValue.cpp"
        "ASTConsumer.cpp"
        "ASTContext.cpp"
        "ASTDiagnostic.cpp"
        "ASTDumper.cpp"
        "ASTImporter.cpp"
        "ASTTypeTraits.cpp"
        "AttrImpl.cpp"
        "CXXInheritance.cpp"
        "Comment.cpp"
        "CommentBriefParser.cpp"
        "CommentCommandTraits.cpp"
        "CommentLexer.cpp"
        "CommentParser.cpp"
        "CommentSema.cpp"
        "Decl.cpp"
        "DeclBase.cpp"
        "DeclCXX.cpp"
        "DeclFriend.cpp"
        "DeclGroup.cpp"
        "DeclObjC.cpp"
        "DeclOpenMP.cpp"
        "DeclPrinter.cpp"
        "DeclTemplate.cpp"
        "DeclarationName.cpp"
        "Expr.cpp"
        "ExprCXX.cpp"
        "ExprClassification.cpp"
        "ExprConstant.cpp"
        "ExprObjC.cpp"
        "ExternalASTSource.cpp"
        "InheritViz.cpp"
        "ItaniumCXXABI.cpp"
        "ItaniumMangle.cpp"
        "Mangle.cpp"
        "MicrosoftCXXABI.cpp"
        "MicrosoftMangle.cpp"
        "NSAPI.cpp"
        "NestedNameSpecifier.cpp"
        "OpenMPClause.cpp"
        "ParentMap.cpp"
        "RawCommentList.cpp"
        "RecordLayout.cpp"
        "RecordLayoutBuilder.cpp"
        "SelectorLocationsKind.cpp"
        "Stmt.cpp"
        "StmtCXX.cpp"
        "StmtIterator.cpp"
        "StmtObjC.cpp"
        "StmtOpenMP.cpp"
        "StmtPrinter.cpp"
        "StmtProfile.cpp"
        "StmtViz.cpp"
        "TemplateBase.cpp"
        "TemplateName.cpp"
        "Type.cpp"
        "TypeLoc.cpp"
        "TypePrinter.cpp"
        "VTTBuilder.cpp"
        "VTableBuilder.cpp"
    ];
};

in { inherit libclangAST; }
