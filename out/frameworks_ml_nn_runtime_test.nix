{ cc_defaults, cc_fuzz, cc_library_static, cc_test }:
let

/*
 * Copyright 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

NeuralNetworksTest_default_libs = cc_defaults {
    name = "NeuralNetworksTest_default_libs";
    defaults = ["neuralnetworks_defaults"];
    host_supported = false;
    #  b/109953668, disable OpenMP
    #  openmp: true,
    shared_libs = [
        "android.hidl.allocator@1.0"
        "android.hidl.memory@1.0"
        "libandroid"
        "libbase"
        "libcutils"
        "libfmq"
        "libhidlbase"
        "libhidlmemory"
        "liblog"
        "libnativewindow"
        "libneuralnetworks_packageinfo"
        "libutils"
    ];
    static_libs = [
        "android.hardware.neuralnetworks@1.0"
        "android.hardware.neuralnetworks@1.1"
        "android.hardware.neuralnetworks@1.2"
        "android.hardware.neuralnetworks@1.3"
        "libc++fs"
        "libneuralnetworks_generated_test_harness"
        "libsync"
        "libtextclassifier_hash_static"
    ];
    whole_static_libs = [
        "libcrypto_static"
    ];
    srcs = [
        "RequireDebug.cpp" #  Abort compilation if NDEBUG is defined
    ];
    cflags = [
        "-UNDEBUG"
    ];
};

NeuralNetworksTest_defaults = cc_defaults {
    name = "NeuralNetworksTest_defaults";
    defaults = ["NeuralNetworksTest_default_libs"];
    srcs = [
        #  Subset of tests that rely only on public functionality.
        #
        #  Changes to this list must be reflected in the "CtsNNAPITests_static"
        #  library to ensure CTS tests coverage.
        "GeneratedTestUtils.cpp"
        "TestAssertions.cpp"
        "TestControlFlow.cpp"
        "TestFree.cpp"
        "TestGenerated.cpp"
        "TestMemory.cpp"
        "TestNeuralNetworksWrapper.cpp"
        "TestOperandExtraParams.cpp"
        "TestTrivialModel.cpp"
        "TestUnknownDimensions.cpp"
        "TestUnspecifiedDimensions.cpp"

        "TestValidateModel.cpp"
        "TestValidateOperations.cpp"
        "TestValidation.cpp"
        "TestWrapper.cpp"

    ];
    header_libs = [
        "libneuralnetworks_common_headers"
    ];
    static_libs = [
        "libgmock"
    ];
    whole_static_libs = [
        "neuralnetworks_generated_V1_0_example"
        "neuralnetworks_generated_V1_1_example"
        "neuralnetworks_generated_V1_2_example"
        "neuralnetworks_generated_V1_3_cts_only_example"
        "neuralnetworks_generated_V1_3_example"
    ];
};

NeuralNetworksTest_shared_partial = cc_test {
    name = "NeuralNetworksTest_shared_partial";
    defaults = ["NeuralNetworksTest_defaults"];
    srcs = [
        "TestMain.cpp"
    ];
    cflags = [
        "-DNNTEST_ONLY_PUBLIC_API"
    ];
    shared_libs = [
        "libneuralnetworks"
    ];
};

NeuralNetworksTest_static_defaults = cc_defaults {
    name = "NeuralNetworksTest_static_defaults";
    defaults = ["NeuralNetworksTest_defaults"];
    srcs = [
        #  Tests that rely on non-public functionality (i.e., symbols
        #  not exported from libneuralnetworks.so).
        #
        #  b/109953668, disable OpenMP
        #  "TestOpenmpSettings.cpp",
        "TestCompilationCaching.cpp"
        "TestCompliance.cpp"
        "TestExecution.cpp"
        "TestExtensions.cpp"
        "TestFailingDriver.cpp"
        "TestIntrospectionControl.cpp"
        "TestMemoryDomain.cpp"
        "TestMemoryInternal.cpp"
        "TestPartitioning.cpp"
        "TestPartitioningRandom.cpp"
        "TestRemoveDefaultArguments.cpp"
        "TestVersionedInterfaces.cpp"
        "fibonacci_extension/FibonacciDriver.cpp"
        "fibonacci_extension/FibonacciExtensionTest.cpp"

        "TestMain.cpp"

        "Bridge.cpp"
    ];
    static_libs = [
        "android.hardware.neuralnetworks@1.0-adapter-helper"
        "android.hardware.neuralnetworks@1.1-adapter-helper"
        "android.hardware.neuralnetworks@1.2-adapter-helper"
        "android.hardware.neuralnetworks@1.3-adapter-helper"
        "libSampleDriver"
        "libgmock"
        "libhidladapter"
        "libneuralnetworks_common"
        "libneuralnetworks_generated_test_harness"
        "libneuralnetworks_static"
    ];
    shared_libs = [
        "libcutils"
    ];
    header_libs = [
        "libneuralnetworks_private_headers"
        "libutils_headers"
        "neuralnetworks_example_fibonacci_extension"
    ];
};

NeuralNetworksTest_static = cc_test {
    name = "NeuralNetworksTest_static";
    defaults = ["NeuralNetworksTest_static_defaults"];
    test_suites = [
        "general-tests"
    ];
};

NeuralNetworksTest_static_fuzzing = cc_test {
    name = "NeuralNetworksTest_static_fuzzing";
    defaults = ["NeuralNetworksTest_default_libs"];
    srcs = [
        "GeneratedTestUtils.cpp"
        "TestNeuralNetworksWrapper.cpp"
        "fuzzing/OperationManager.cpp"
        "fuzzing/RandomGraphGenerator.cpp"
        "fuzzing/RandomGraphGeneratorUtils.cpp"
        "fuzzing/RandomVariable.cpp"
        "fuzzing/TestRandomGraph.cpp"
        "fuzzing/operation_signatures/BoundingBox.cpp"
        "fuzzing/operation_signatures/Broadcast.cpp"
        "fuzzing/operation_signatures/ConcatSplit.cpp"
        "fuzzing/operation_signatures/Convolutions.cpp"
        "fuzzing/operation_signatures/Elementwise.cpp"
        "fuzzing/operation_signatures/FullyConnected.cpp"
        "fuzzing/operation_signatures/Normalization.cpp"
        "fuzzing/operation_signatures/Poolings.cpp"
        "fuzzing/operation_signatures/Reduce.cpp"
        "fuzzing/operation_signatures/Reshape.cpp"
        "fuzzing/operation_signatures/Resize.cpp"
        "fuzzing/operation_signatures/Selection.cpp"
    ];
    static_libs = [
        "libSampleDriver"
        "libgmock"
        "libneuralnetworks_common"
        "libneuralnetworks_static"
    ];
    shared_libs = ["libmemunreachable"];
    header_libs = [
        "libneuralnetworks_private_headers"
    ];
};

libneuralnetworks_fuzzer = cc_fuzz {
    name = "libneuralnetworks_fuzzer";
    defaults = ["NeuralNetworksTest_default_libs"];
    owner = "google";
    fuzz_config = {
        cc = ["butlermichael@google.com"];
    };
    srcs = [
        "android_fuzzing/Converter.cpp"
        "android_fuzzing/FuzzTest.cpp"
        "android_fuzzing/StaticAssert.cpp"
    ];
    corpus = ["android_fuzzing/corpus/*"];
    shared_libs = ["libprotobuf-cpp-full"];
    static_libs = [
        "libneuralnetworks_common"
        "libneuralnetworks_fuzzer_proto"
        "libneuralnetworks_generated_test_harness"
        "libneuralnetworks_static"
        "libprotobuf-mutator"
    ];
};

#  Temporarily disabled due to b/139889855.
NeuralNetworksTest_static_asan = cc_test {
    name = "NeuralNetworksTest_static_asan";
    defaults = ["NeuralNetworksTest_static_defaults"];
    enabled = false;
    sanitize = {
        address = true;
    };
    #  Declare explicit library dependency for continuous builds
    target = {
        android_arm = {
            required = [
                "libclang_rt.asan-arm-android"
            ];
        };
        android_arm64 = {
            required = [
                "libclang_rt.asan-aarch64-android"
            ];
        };
        android_x86 = {
            required = [
                "libclang_rt.asan-i686-android"
            ];
        };
        android_x86_64 = {
            required = [
                "libclang_rt.asan-x86_64-android"
            ];
        };
    };
};

#  Temporarily disabled due to b/139889855.
NeuralNetworksTest_static_ubsan = cc_test {
    name = "NeuralNetworksTest_static_ubsan";
    defaults = ["NeuralNetworksTest_static_defaults"];
    enabled = false;
    sanitize = {
        undefined = true;
        all_undefined = true;
        diag = {
            undefined = true;
        };
    };
};

NeuralNetworksTest_mt_defaults = cc_defaults {
    name = "NeuralNetworksTest_mt_defaults";
    defaults = ["NeuralNetworksTest_default_libs"];
    srcs = [
        "GeneratedTestUtils.cpp"
        "TestGenerated.cpp"
        "TestMain.cpp"
        "TestNeuralNetworksWrapper.cpp"
    ];
    cflags = [
        "-DNNTEST_MULTITHREADED"
    ];
    static_libs = [
        "libSampleDriver"
        "libgmock"
        "libneuralnetworks_common"
        "libneuralnetworks_static"
    ];
    whole_static_libs = [
        "neuralnetworks_generated_V1_0_example"
        "neuralnetworks_generated_V1_1_example"
        "neuralnetworks_generated_V1_2_example"
        "neuralnetworks_generated_V1_3_cts_only_example"
        "neuralnetworks_generated_V1_3_example"
    ];
    shared_libs = [
        "libcutils"
    ];
    header_libs = [
        "libneuralnetworks_private_headers"
    ];
};

NeuralNetworksTest_mt_static = cc_test {
    name = "NeuralNetworksTest_mt_static";
    defaults = ["NeuralNetworksTest_mt_defaults"];
};

#  Temporarily disabled due to b/139889855.
NeuralNetworksTest_mt_static_asan = cc_test {
    #  Note: tsan not supported on Android (yet)
    name = "NeuralNetworksTest_mt_static_asan";
    defaults = ["NeuralNetworksTest_mt_defaults"];
    enabled = false;
    sanitize = {
        address = true;
    };
};

CtsNNAPITests_static = cc_library_static {
    name = "CtsNNAPITests_static";
    defaults = ["neuralnetworks_float16"];
    srcs = [
        ":libneuralnetworks_generated_test_harness_for_cts"
        "CtsMain.cpp"
        "GeneratedTestUtils.cpp"
        "RequireDebug.cpp" #  Abort compilation if NDEBUG is defined
        "TestControlFlow.cpp"
        "TestFree.cpp"
        "TestGenerated.cpp"
        "TestMemory.cpp"
        "TestNeuralNetworksWrapper.cpp"
        "TestTrivialModel.cpp"
        "TestUnknownDimensions.cpp"
        "TestValidateModel.cpp"
        "TestValidateOperations.cpp"
        "TestValidation.cpp"
        "TestWrapper.cpp"
        "fuzzing/OperationManager.cpp"
        "fuzzing/RandomGraphGenerator.cpp"
        "fuzzing/RandomGraphGeneratorUtils.cpp"
        "fuzzing/RandomVariable.cpp"
        "fuzzing/TestRandomGraph.cpp"
        "fuzzing/operation_signatures/BoundingBox.cpp"
        "fuzzing/operation_signatures/Broadcast.cpp"
        "fuzzing/operation_signatures/ConcatSplit.cpp"
        "fuzzing/operation_signatures/Convolutions.cpp"
        "fuzzing/operation_signatures/Elementwise.cpp"
        "fuzzing/operation_signatures/FullyConnected.cpp"
        "fuzzing/operation_signatures/Normalization.cpp"
        "fuzzing/operation_signatures/Poolings.cpp"
        "fuzzing/operation_signatures/Reduce.cpp"
        "fuzzing/operation_signatures/Reshape.cpp"
        "fuzzing/operation_signatures/Resize.cpp"
        "fuzzing/operation_signatures/Selection.cpp"
        "generated/spec_V1_0/add.example.cpp"
        "generated/spec_V1_0/add_broadcast_quant8.example.cpp"
        "generated/spec_V1_0/add_quant8.example.cpp"
        "generated/spec_V1_0/avg_pool_float_1.example.cpp"
        "generated/spec_V1_0/avg_pool_float_2.example.cpp"
        "generated/spec_V1_0/avg_pool_float_3.example.cpp"
        "generated/spec_V1_0/avg_pool_float_4.example.cpp"
        "generated/spec_V1_0/avg_pool_float_5.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_1.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_2.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_3.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_4.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_5.example.cpp"
        "generated/spec_V1_0/concat_float_1.example.cpp"
        "generated/spec_V1_0/concat_float_2.example.cpp"
        "generated/spec_V1_0/concat_float_3.example.cpp"
        "generated/spec_V1_0/concat_quant8_1.example.cpp"
        "generated/spec_V1_0/concat_quant8_2.example.cpp"
        "generated/spec_V1_0/concat_quant8_3.example.cpp"
        "generated/spec_V1_0/conv_1_h3_w2_SAME.example.cpp"
        "generated/spec_V1_0/conv_1_h3_w2_VALID.example.cpp"
        "generated/spec_V1_0/conv_3_h3_w2_SAME.example.cpp"
        "generated/spec_V1_0/conv_3_h3_w2_VALID.example.cpp"
        "generated/spec_V1_0/conv_float.example.cpp"
        "generated/spec_V1_0/conv_float_2.example.cpp"
        "generated/spec_V1_0/conv_float_channels.example.cpp"
        "generated/spec_V1_0/conv_float_channels_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_float_large.example.cpp"
        "generated/spec_V1_0/conv_float_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_float_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8.example.cpp"
        "generated/spec_V1_0/conv_quant8_2.example.cpp"
        "generated/spec_V1_0/conv_quant8_channels.example.cpp"
        "generated/spec_V1_0/conv_quant8_channels_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8_large.example.cpp"
        "generated/spec_V1_0/conv_quant8_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8_overflow.example.cpp"
        "generated/spec_V1_0/conv_quant8_overflow_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depth_to_space_float_1.example.cpp"
        "generated/spec_V1_0/depth_to_space_float_2.example.cpp"
        "generated/spec_V1_0/depth_to_space_float_3.example.cpp"
        "generated/spec_V1_0/depth_to_space_quant8_1.example.cpp"
        "generated/spec_V1_0/depth_to_space_quant8_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large_2_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_large.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/dequantize.example.cpp"
        "generated/spec_V1_0/embedding_lookup.example.cpp"
        "generated/spec_V1_0/floor.example.cpp"
        "generated/spec_V1_0/fully_connected_float.example.cpp"
        "generated/spec_V1_0/fully_connected_float_2.example.cpp"
        "generated/spec_V1_0/fully_connected_float_3.example.cpp"
        "generated/spec_V1_0/fully_connected_float_large.example.cpp"
        "generated/spec_V1_0/fully_connected_float_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/fully_connected_float_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_2.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_large.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/hashtable_lookup_float.example.cpp"
        "generated/spec_V1_0/hashtable_lookup_quant8.example.cpp"
        "generated/spec_V1_0/l2_normalization.example.cpp"
        "generated/spec_V1_0/l2_normalization_2.example.cpp"
        "generated/spec_V1_0/l2_normalization_large.example.cpp"
        "generated/spec_V1_0/l2_pool_float.example.cpp"
        "generated/spec_V1_0/l2_pool_float_2.example.cpp"
        "generated/spec_V1_0/l2_pool_float_large.example.cpp"
        "generated/spec_V1_0/local_response_norm_float_1.example.cpp"
        "generated/spec_V1_0/local_response_norm_float_4.example.cpp"
        "generated/spec_V1_0/logistic_float_1.example.cpp"
        "generated/spec_V1_0/logistic_float_2.example.cpp"
        "generated/spec_V1_0/logistic_quant8_1.example.cpp"
        "generated/spec_V1_0/logistic_quant8_2.example.cpp"
        "generated/spec_V1_0/lsh_projection.example.cpp"
        "generated/spec_V1_0/lsh_projection_2.example.cpp"
        "generated/spec_V1_0/lsh_projection_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/lstm.example.cpp"
        "generated/spec_V1_0/lstm2.example.cpp"
        "generated/spec_V1_0/lstm2_state.example.cpp"
        "generated/spec_V1_0/lstm2_state2.example.cpp"
        "generated/spec_V1_0/lstm3.example.cpp"
        "generated/spec_V1_0/lstm3_state.example.cpp"
        "generated/spec_V1_0/lstm3_state2.example.cpp"
        "generated/spec_V1_0/lstm3_state3.example.cpp"
        "generated/spec_V1_0/lstm_state.example.cpp"
        "generated/spec_V1_0/lstm_state2.example.cpp"
        "generated/spec_V1_0/max_pool_float_1.example.cpp"
        "generated/spec_V1_0/max_pool_float_2.example.cpp"
        "generated/spec_V1_0/max_pool_float_3.example.cpp"
        "generated/spec_V1_0/max_pool_float_4.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_1.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_2.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_3.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_4.example.cpp"
        "generated/spec_V1_0/mobilenet_224_gender_basic_fixed.example.cpp"
        "generated/spec_V1_0/mobilenet_quantized.example.cpp"
        "generated/spec_V1_0/mul.example.cpp"
        "generated/spec_V1_0/mul_broadcast_quant8.example.cpp"
        "generated/spec_V1_0/mul_quant8.example.cpp"
        "generated/spec_V1_0/mul_relu.example.cpp"
        "generated/spec_V1_0/relu1_float_1.example.cpp"
        "generated/spec_V1_0/relu1_float_2.example.cpp"
        "generated/spec_V1_0/relu1_quant8_1.example.cpp"
        "generated/spec_V1_0/relu1_quant8_2.example.cpp"
        "generated/spec_V1_0/relu6_float_1.example.cpp"
        "generated/spec_V1_0/relu6_float_2.example.cpp"
        "generated/spec_V1_0/relu6_quant8_1.example.cpp"
        "generated/spec_V1_0/relu6_quant8_2.example.cpp"
        "generated/spec_V1_0/relu_float_1.example.cpp"
        "generated/spec_V1_0/relu_float_2.example.cpp"
        "generated/spec_V1_0/relu_quant8_1.example.cpp"
        "generated/spec_V1_0/relu_quant8_2.example.cpp"
        "generated/spec_V1_0/reshape.example.cpp"
        "generated/spec_V1_0/reshape_quant8.example.cpp"
        "generated/spec_V1_0/reshape_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/reshape_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/resize_bilinear.example.cpp"
        "generated/spec_V1_0/resize_bilinear_2.example.cpp"
        "generated/spec_V1_0/rnn.example.cpp"
        "generated/spec_V1_0/rnn_state.example.cpp"
        "generated/spec_V1_0/softmax_float_1.example.cpp"
        "generated/spec_V1_0/softmax_float_2.example.cpp"
        "generated/spec_V1_0/softmax_quant8_1.example.cpp"
        "generated/spec_V1_0/softmax_quant8_2.example.cpp"
        "generated/spec_V1_0/space_to_depth_float_1.example.cpp"
        "generated/spec_V1_0/space_to_depth_float_2.example.cpp"
        "generated/spec_V1_0/space_to_depth_float_3.example.cpp"
        "generated/spec_V1_0/space_to_depth_quant8_1.example.cpp"
        "generated/spec_V1_0/space_to_depth_quant8_2.example.cpp"
        "generated/spec_V1_0/svdf.example.cpp"
        "generated/spec_V1_0/svdf2.example.cpp"
        "generated/spec_V1_0/svdf_bias_present.example.cpp"
        "generated/spec_V1_0/svdf_state.example.cpp"
        "generated/spec_V1_0/tanh.example.cpp"
        "generated/spec_V1_1/add_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_5_relaxed.example.cpp"
        "generated/spec_V1_1/batch_to_space.example.cpp"
        "generated/spec_V1_1/batch_to_space_float_1.example.cpp"
        "generated/spec_V1_1/batch_to_space_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/batch_to_space_quant8_1.example.cpp"
        "generated/spec_V1_1/batch_to_space_relaxed.example.cpp"
        "generated/spec_V1_1/concat_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/concat_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/concat_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/conv_1_h3_w2_SAME_relaxed.example.cpp"
        "generated/spec_V1_1/conv_1_h3_w2_VALID_relaxed.example.cpp"
        "generated/spec_V1_1/conv_3_h3_w2_SAME_relaxed.example.cpp"
        "generated/spec_V1_1/conv_3_h3_w2_VALID_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_channels_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_channels_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_large_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depth_to_space_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/depth_to_space_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/depth_to_space_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_2_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_2_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv_relaxed.example.cpp"
        "generated/spec_V1_1/dequantize_relaxed.example.cpp"
        "generated/spec_V1_1/div.example.cpp"
        "generated/spec_V1_1/div_broadcast_float.example.cpp"
        "generated/spec_V1_1/div_broadcast_float_relaxed.example.cpp"
        "generated/spec_V1_1/div_relaxed.example.cpp"
        "generated/spec_V1_1/embedding_lookup_relaxed.example.cpp"
        "generated/spec_V1_1/floor_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_4d_simple.example.cpp"
        "generated/spec_V1_1/fully_connected_float_4d_simple_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_large_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/hashtable_lookup_float_relaxed.example.cpp"
        "generated/spec_V1_1/l2_normalization_2_relaxed.example.cpp"
        "generated/spec_V1_1/l2_normalization_large_relaxed.example.cpp"
        "generated/spec_V1_1/l2_normalization_relaxed.example.cpp"
        "generated/spec_V1_1/l2_pool_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/l2_pool_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/l2_pool_float_relaxed.example.cpp"
        "generated/spec_V1_1/local_response_norm_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/local_response_norm_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/logistic_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/logistic_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/lsh_projection_2_relaxed.example.cpp"
        "generated/spec_V1_1/lsh_projection_relaxed.example.cpp"
        "generated/spec_V1_1/lsh_projection_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/lstm2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm2_state2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm2_state_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_state2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_state3_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_state_relaxed.example.cpp"
        "generated/spec_V1_1/lstm_relaxed.example.cpp"
        "generated/spec_V1_1/lstm_state2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm_state_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/mean.example.cpp"
        "generated/spec_V1_1/mean_b155508675.example.cpp"
        "generated/spec_V1_1/mean_float_1.example.cpp"
        "generated/spec_V1_1/mean_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/mean_float_2.example.cpp"
        "generated/spec_V1_1/mean_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/mean_quant8_1.example.cpp"
        "generated/spec_V1_1/mean_quant8_2.example.cpp"
        "generated/spec_V1_1/mean_relaxed.example.cpp"
        "generated/spec_V1_1/mobilenet_224_gender_basic_fixed_relaxed.example.cpp"
        "generated/spec_V1_1/mul_relaxed.example.cpp"
        "generated/spec_V1_1/mul_relu_relaxed.example.cpp"
        "generated/spec_V1_1/pad.example.cpp"
        "generated/spec_V1_1/pad_float_1.example.cpp"
        "generated/spec_V1_1/pad_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/pad_relaxed.example.cpp"
        "generated/spec_V1_1/relu1_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/relu1_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/relu6_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/relu6_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/relu_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/relu_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/reshape_b138150365.example.cpp"
        "generated/spec_V1_1/reshape_relaxed.example.cpp"
        "generated/spec_V1_1/reshape_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/resize_bilinear_2_relaxed.example.cpp"
        "generated/spec_V1_1/resize_bilinear_relaxed.example.cpp"
        "generated/spec_V1_1/rnn_relaxed.example.cpp"
        "generated/spec_V1_1/rnn_state_relaxed.example.cpp"
        "generated/spec_V1_1/softmax_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/softmax_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_1.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_2.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_3.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch_quant8_1.example.cpp"
        "generated/spec_V1_1/space_to_batch_quant8_2.example.cpp"
        "generated/spec_V1_1/space_to_batch_quant8_3.example.cpp"
        "generated/spec_V1_1/space_to_batch_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_depth_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_depth_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_depth_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/squeeze.example.cpp"
        "generated/spec_V1_1/squeeze_b155238914.example.cpp"
        "generated/spec_V1_1/squeeze_float_1.example.cpp"
        "generated/spec_V1_1/squeeze_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/squeeze_omitted.example.cpp"
        "generated/spec_V1_1/squeeze_quant8_1.example.cpp"
        "generated/spec_V1_1/squeeze_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice.example.cpp"
        "generated/spec_V1_1/strided_slice_b155662254.example.cpp"
        "generated/spec_V1_1/strided_slice_float_1.example.cpp"
        "generated/spec_V1_1/strided_slice_float_10.example.cpp"
        "generated/spec_V1_1/strided_slice_float_10_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_11.example.cpp"
        "generated/spec_V1_1/strided_slice_float_11_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_2.example.cpp"
        "generated/spec_V1_1/strided_slice_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_3.example.cpp"
        "generated/spec_V1_1/strided_slice_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_4.example.cpp"
        "generated/spec_V1_1/strided_slice_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_5.example.cpp"
        "generated/spec_V1_1/strided_slice_float_5_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_6.example.cpp"
        "generated/spec_V1_1/strided_slice_float_6_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_7.example.cpp"
        "generated/spec_V1_1/strided_slice_float_7_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_8.example.cpp"
        "generated/spec_V1_1/strided_slice_float_8_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_9.example.cpp"
        "generated/spec_V1_1/strided_slice_float_9_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_qaunt8_10.example.cpp"
        "generated/spec_V1_1/strided_slice_qaunt8_11.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_1.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_2.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_3.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_4.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_5.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_6.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_7.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_8.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_9.example.cpp"
        "generated/spec_V1_1/strided_slice_relaxed.example.cpp"
        "generated/spec_V1_1/sub.example.cpp"
        "generated/spec_V1_1/sub_broadcast_float.example.cpp"
        "generated/spec_V1_1/sub_broadcast_float_relaxed.example.cpp"
        "generated/spec_V1_1/sub_relaxed.example.cpp"
        "generated/spec_V1_1/svdf2_relaxed.example.cpp"
        "generated/spec_V1_1/svdf_bias_present_relaxed.example.cpp"
        "generated/spec_V1_1/svdf_relaxed.example.cpp"
        "generated/spec_V1_1/svdf_state_relaxed.example.cpp"
        "generated/spec_V1_1/tanh_relaxed.example.cpp"
        "generated/spec_V1_1/transpose.example.cpp"
        "generated/spec_V1_1/transpose_float_1.example.cpp"
        "generated/spec_V1_1/transpose_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/transpose_quant8_1.example.cpp"
        "generated/spec_V1_1/transpose_relaxed.example.cpp"
        "generated/spec_V1_2/abs.example.cpp"
        "generated/spec_V1_2/add_v1_2.example.cpp"
        "generated/spec_V1_2/argmax_1.example.cpp"
        "generated/spec_V1_2/argmax_2.example.cpp"
        "generated/spec_V1_2/argmax_3.example.cpp"
        "generated/spec_V1_2/argmax_b155660285.example.cpp"
        "generated/spec_V1_2/argmin_1.example.cpp"
        "generated/spec_V1_2/argmin_2.example.cpp"
        "generated/spec_V1_2/argmin_3.example.cpp"
        "generated/spec_V1_2/argmin_b155660285.example.cpp"
        "generated/spec_V1_2/avg_pool_v1_2.example.cpp"
        "generated/spec_V1_2/axis_aligned_bbox_transform.example.cpp"
        "generated/spec_V1_2/batch_to_space_v1_2.example.cpp"
        "generated/spec_V1_2/bbox_graph.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_aux_input.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_cifg_peephole.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_float16_batch_major.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_float16_batch_major_aux_input.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_float16_batch_major_merge_outputs.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_merge_outputs.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_norm_fw_output.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_rnn.example.cpp"
        "generated/spec_V1_2/box_with_nms_limit_gaussian.example.cpp"
        "generated/spec_V1_2/box_with_nms_limit_hard.example.cpp"
        "generated/spec_V1_2/box_with_nms_limit_linear.example.cpp"
        "generated/spec_V1_2/cast.example.cpp"
        "generated/spec_V1_2/channel_shuffle.example.cpp"
        "generated/spec_V1_2/concat_float16_1.example.cpp"
        "generated/spec_V1_2/concat_float16_2.example.cpp"
        "generated/spec_V1_2/concat_float16_3.example.cpp"
        "generated/spec_V1_2/concat_mixed_quant.example.cpp"
        "generated/spec_V1_2/concat_zero_sized.example.cpp"
        "generated/spec_V1_2/conv2d_dilation.example.cpp"
        "generated/spec_V1_2/conv2d_per_channel.example.cpp"
        "generated/spec_V1_2/conv2d_v1_2.example.cpp"
        "generated/spec_V1_2/depth_to_space_v1_2.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_dilation.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_invalid_filter_dims.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_per_channel.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_v1_2.example.cpp"
        "generated/spec_V1_2/dequantize_v1_2.example.cpp"
        "generated/spec_V1_2/detection_postprocess.example.cpp"
        "generated/spec_V1_2/div_v1_2.example.cpp"
        "generated/spec_V1_2/embedding_lookup_v1_2.example.cpp"
        "generated/spec_V1_2/equal.example.cpp"
        "generated/spec_V1_2/exp.example.cpp"
        "generated/spec_V1_2/expand_dims.example.cpp"
        "generated/spec_V1_2/floor_float16.example.cpp"
        "generated/spec_V1_2/fully_connected_v1_2.example.cpp"
        "generated/spec_V1_2/gather.example.cpp"
        "generated/spec_V1_2/gather_higher_rank.example.cpp"
        "generated/spec_V1_2/generate_proposals.example.cpp"
        "generated/spec_V1_2/greater.example.cpp"
        "generated/spec_V1_2/greater_equal.example.cpp"
        "generated/spec_V1_2/grouped_conv2d.example.cpp"
        "generated/spec_V1_2/heatmap_max_keypoint.example.cpp"
        "generated/spec_V1_2/instance_normalization.example.cpp"
        "generated/spec_V1_2/l2_normalization_axis.example.cpp"
        "generated/spec_V1_2/l2_normalization_v1_2.example.cpp"
        "generated/spec_V1_2/l2_pool_v1_2.example.cpp"
        "generated/spec_V1_2/layer_norm_lstm.example.cpp"
        "generated/spec_V1_2/less.example.cpp"
        "generated/spec_V1_2/less_equal.example.cpp"
        "generated/spec_V1_2/local_response_normalization_v1_2.example.cpp"
        "generated/spec_V1_2/log.example.cpp"
        "generated/spec_V1_2/log_softmax.example.cpp"
        "generated/spec_V1_2/logical_and.example.cpp"
        "generated/spec_V1_2/logical_not.example.cpp"
        "generated/spec_V1_2/logical_or.example.cpp"
        "generated/spec_V1_2/logistic_v1_2.example.cpp"
        "generated/spec_V1_2/lsh_projection_3_relaxed.example.cpp"
        "generated/spec_V1_2/lsh_projection_4_relaxed.example.cpp"
        "generated/spec_V1_2/lsh_projection_deprecated.example.cpp"
        "generated/spec_V1_2/lsh_projection_float16.example.cpp"
        "generated/spec_V1_2/lstm2_float16.example.cpp"
        "generated/spec_V1_2/lstm2_state2_float16.example.cpp"
        "generated/spec_V1_2/lstm2_state_float16.example.cpp"
        "generated/spec_V1_2/lstm3_float16.example.cpp"
        "generated/spec_V1_2/lstm3_state2_float16.example.cpp"
        "generated/spec_V1_2/lstm3_state3_float16.example.cpp"
        "generated/spec_V1_2/lstm3_state_float16.example.cpp"
        "generated/spec_V1_2/lstm_float16.example.cpp"
        "generated/spec_V1_2/lstm_state2_float16.example.cpp"
        "generated/spec_V1_2/lstm_state_float16.example.cpp"
        "generated/spec_V1_2/max_pool_v1_2.example.cpp"
        "generated/spec_V1_2/maximum.example.cpp"
        "generated/spec_V1_2/mean_float16.example.cpp"
        "generated/spec_V1_2/minimum.example.cpp"
        "generated/spec_V1_2/mul_v1_2.example.cpp"
        "generated/spec_V1_2/neg.example.cpp"
        "generated/spec_V1_2/not_equal.example.cpp"
        "generated/spec_V1_2/pad_all_dims.example.cpp"
        "generated/spec_V1_2/pad_float16.example.cpp"
        "generated/spec_V1_2/pad_low_rank.example.cpp"
        "generated/spec_V1_2/pad_low_rank_quant8.example.cpp"
        "generated/spec_V1_2/pad_quant8.example.cpp"
        "generated/spec_V1_2/pad_quant8_nonzero.example.cpp"
        "generated/spec_V1_2/pad_v2_1_float.example.cpp"
        "generated/spec_V1_2/pad_v2_1_quant8.example.cpp"
        "generated/spec_V1_2/pad_v2_all_dims.example.cpp"
        "generated/spec_V1_2/pad_v2_all_dims_quant8.example.cpp"
        "generated/spec_V1_2/pad_v2_low_rank.example.cpp"
        "generated/spec_V1_2/pad_v2_low_rank_quant8.example.cpp"
        "generated/spec_V1_2/pow.example.cpp"
        "generated/spec_V1_2/prelu.example.cpp"
        "generated/spec_V1_2/quantize.example.cpp"
        "generated/spec_V1_2/quantized_lstm.example.cpp"
        "generated/spec_V1_2/random_multinomial.example.cpp"
        "generated/spec_V1_2/random_multinomial_float16.example.cpp"
        "generated/spec_V1_2/reduce_all.example.cpp"
        "generated/spec_V1_2/reduce_all_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_any.example.cpp"
        "generated/spec_V1_2/reduce_any_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_max.example.cpp"
        "generated/spec_V1_2/reduce_max_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_min.example.cpp"
        "generated/spec_V1_2/reduce_min_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_prod.example.cpp"
        "generated/spec_V1_2/reduce_prod_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_sum.example.cpp"
        "generated/spec_V1_2/reduce_sum_b155508675.example.cpp"
        "generated/spec_V1_2/relu1_v1_2.example.cpp"
        "generated/spec_V1_2/relu6_v1_2.example.cpp"
        "generated/spec_V1_2/relu_v1_2.example.cpp"
        "generated/spec_V1_2/reshape_float16.example.cpp"
        "generated/spec_V1_2/resize_bilinear_v1_2.example.cpp"
        "generated/spec_V1_2/resize_nearest_neighbor.example.cpp"
        "generated/spec_V1_2/rnn_float16.example.cpp"
        "generated/spec_V1_2/roi_align.example.cpp"
        "generated/spec_V1_2/roi_pooling.example.cpp"
        "generated/spec_V1_2/rsqrt.example.cpp"
        "generated/spec_V1_2/select_v1_2.example.cpp"
        "generated/spec_V1_2/sin.example.cpp"
        "generated/spec_V1_2/slice.example.cpp"
        "generated/spec_V1_2/softmax_v1_2.example.cpp"
        "generated/spec_V1_2/space_to_batch_quant8_nonzero.example.cpp"
        "generated/spec_V1_2/space_to_batch_v1_2.example.cpp"
        "generated/spec_V1_2/space_to_depth_v1_2.example.cpp"
        "generated/spec_V1_2/split_float_1.example.cpp"
        "generated/spec_V1_2/split_float_2.example.cpp"
        "generated/spec_V1_2/split_float_3.example.cpp"
        "generated/spec_V1_2/split_float_4.example.cpp"
        "generated/spec_V1_2/split_float_5.example.cpp"
        "generated/spec_V1_2/split_int32_1.example.cpp"
        "generated/spec_V1_2/split_int32_2.example.cpp"
        "generated/spec_V1_2/split_int32_3.example.cpp"
        "generated/spec_V1_2/split_int32_4.example.cpp"
        "generated/spec_V1_2/split_quant8_1.example.cpp"
        "generated/spec_V1_2/split_quant8_2.example.cpp"
        "generated/spec_V1_2/split_quant8_3.example.cpp"
        "generated/spec_V1_2/split_quant8_4.example.cpp"
        "generated/spec_V1_2/sqrt.example.cpp"
        "generated/spec_V1_2/squeeze_float16.example.cpp"
        "generated/spec_V1_2/strided_slice_float16.example.cpp"
        "generated/spec_V1_2/strided_slice_invalid.example.cpp"
        "generated/spec_V1_2/sub_quantized_different_scales.example.cpp"
        "generated/spec_V1_2/sub_v1_2.example.cpp"
        "generated/spec_V1_2/sub_v1_2_broadcast.example.cpp"
        "generated/spec_V1_2/svdf_bias_present_float16.example.cpp"
        "generated/spec_V1_2/svdf_float16.example.cpp"
        "generated/spec_V1_2/svdf_state_float16.example.cpp"
        "generated/spec_V1_2/tanh_v1_2.example.cpp"
        "generated/spec_V1_2/tile_1.example.cpp"
        "generated/spec_V1_2/tile_2.example.cpp"
        "generated/spec_V1_2/tile_3.example.cpp"
        "generated/spec_V1_2/topk_v2.example.cpp"
        "generated/spec_V1_2/transpose_conv2d.example.cpp"
        "generated/spec_V1_2/transpose_conv2d_large.example.cpp"
        "generated/spec_V1_2/transpose_float16.example.cpp"
        "generated/spec_V1_2/transpose_v1_2.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_1step.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_batch_major_norm_peephole_projection.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_batch_major_peephole_projection_bias.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_cifg_peephole.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_f16_batch_major.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_f16_norm_peephole_projection.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_layer_norm_cifg_peephole.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_norm_peephole_projection.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_rnn.example.cpp"
        "generated/spec_V1_3/abs_int32.example.cpp"
        "generated/spec_V1_3/add_int32.example.cpp"
        "generated/spec_V1_3/add_quant8_signed.example.cpp"
        "generated/spec_V1_3/argmax_quant8_signed.example.cpp"
        "generated/spec_V1_3/argmin_quant8_signed.example.cpp"
        "generated/spec_V1_3/avg_pool_quant8_signed.example.cpp"
        "generated/spec_V1_3/axis_aligned_bbox_transform_quant8_signed.example.cpp"
        "generated/spec_V1_3/batch_to_space_quant8_signed.example.cpp"
        "generated/spec_V1_3/bbox_graph_quant8_signed.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_lstm.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_lstm_state_output.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_rnn_1_3.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_rnn_state_output.example.cpp"
        "generated/spec_V1_3/box_with_nms_limit_quant8_signed.example.cpp"
        "generated/spec_V1_3/cast_identity.example.cpp"
        "generated/spec_V1_3/channel_shuffle_quant8_signed.example.cpp"
        "generated/spec_V1_3/concat_quant8_signed.example.cpp"
        "generated/spec_V1_3/conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/depth_to_space_quant8_signed.example.cpp"
        "generated/spec_V1_3/depthwise_conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/dequantize_quant8_signed.example.cpp"
        "generated/spec_V1_3/div_int32.example.cpp"
        "generated/spec_V1_3/elu.example.cpp"
        "generated/spec_V1_3/embedding_lookup_quant8_signed.example.cpp"
        "generated/spec_V1_3/embedding_lookup_v1_3.example.cpp"
        "generated/spec_V1_3/equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/expand_dims_quant8_signed.example.cpp"
        "generated/spec_V1_3/fill.example.cpp"
        "generated/spec_V1_3/fully_connected_quant8_signed.example.cpp"
        "generated/spec_V1_3/gather_quant8_signed.example.cpp"
        "generated/spec_V1_3/generate_proposals_quant8_signed.example.cpp"
        "generated/spec_V1_3/greater_equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/greater_quant8_signed.example.cpp"
        "generated/spec_V1_3/grouped_conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/hard_swish.example.cpp"
        "generated/spec_V1_3/heatmap_max_keypoint_quant8_signed.example.cpp"
        "generated/spec_V1_3/if_constant.example.cpp"
        "generated/spec_V1_3/if_no_value.example.cpp"
        "generated/spec_V1_3/if_same_branch_model.example.cpp"
        "generated/spec_V1_3/if_simple.example.cpp"
        "generated/spec_V1_3/l2_normalization_quant8_signed.example.cpp"
        "generated/spec_V1_3/l2_normalization_zeros.example.cpp"
        "generated/spec_V1_3/less_equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/less_quant8_signed.example.cpp"
        "generated/spec_V1_3/logistic_quant8_signed.example.cpp"
        "generated/spec_V1_3/max_pool_quant8_signed.example.cpp"
        "generated/spec_V1_3/maximum_quant8_signed.example.cpp"
        "generated/spec_V1_3/mean_quant8_signed.example.cpp"
        "generated/spec_V1_3/minimum_quant8_signed.example.cpp"
        "generated/spec_V1_3/mul_int32.example.cpp"
        "generated/spec_V1_3/mul_quant8_signed.example.cpp"
        "generated/spec_V1_3/not_equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/pad_quant8_signed.example.cpp"
        "generated/spec_V1_3/pow_same_shape.example.cpp"
        "generated/spec_V1_3/prelu_quant8_signed.example.cpp"
        "generated/spec_V1_3/qlstm_noprojection.example.cpp"
        "generated/spec_V1_3/qlstm_projection.example.cpp"
        "generated/spec_V1_3/quantize_quant8_signed.example.cpp"
        "generated/spec_V1_3/rank.example.cpp"
        "generated/spec_V1_3/reduce_max_quant8_signed.example.cpp"
        "generated/spec_V1_3/reduce_min_quant8_signed.example.cpp"
        "generated/spec_V1_3/relu1_quant8_signed.example.cpp"
        "generated/spec_V1_3/relu6_quant8_signed.example.cpp"
        "generated/spec_V1_3/relu_quant8_signed.example.cpp"
        "generated/spec_V1_3/reshape_quant8_signed.example.cpp"
        "generated/spec_V1_3/resize_bilinear_v1_3.example.cpp"
        "generated/spec_V1_3/resize_nearest_neighbor_v1_3.example.cpp"
        "generated/spec_V1_3/resize_quant8_signed.example.cpp"
        "generated/spec_V1_3/roi_align_quant8_signed.example.cpp"
        "generated/spec_V1_3/roi_pooling_quant8_signed.example.cpp"
        "generated/spec_V1_3/select_quant8_signed.example.cpp"
        "generated/spec_V1_3/slice_quant8_signed.example.cpp"
        "generated/spec_V1_3/softmax_quant8_signed.example.cpp"
        "generated/spec_V1_3/space_to_batch_quant8_signed.example.cpp"
        "generated/spec_V1_3/space_to_depth_quant8_signed.example.cpp"
        "generated/spec_V1_3/split_quant8_signed.example.cpp"
        "generated/spec_V1_3/squeeze_quant8_signed.example.cpp"
        "generated/spec_V1_3/strided_slice_quant8_signed.example.cpp"
        "generated/spec_V1_3/sub_int32.example.cpp"
        "generated/spec_V1_3/sub_quant8_signed.example.cpp"
        "generated/spec_V1_3/tanh_quant8_signed.example.cpp"
        "generated/spec_V1_3/tile_quant8_signed.example.cpp"
        "generated/spec_V1_3/topk_v2_quant8_signed.example.cpp"
        "generated/spec_V1_3/transpose_conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/transpose_quant8_signed.example.cpp"
        "generated/spec_V1_3/unidirectional_sequence_lstm_layer_norm_cifg_peephole_state_output.example.cpp"
        "generated/spec_V1_3/unidirectional_sequence_rnn.example.cpp"
        "generated/spec_V1_3/while_fib.example.cpp"
        "generated/spec_V1_3/while_infinite_loop.example.cpp"
        "generated/spec_V1_3/while_sum_of_powers.example.cpp"
        "generated/spec_V1_3/while_sum_of_powers_quant8.example.cpp"
        "generated/spec_V1_3/while_sum_of_powers_quant8_signed.example.cpp"
        "generated/spec_V1_3_cts_only/cast_mismatching_shapes.example.cpp"
        "generated/spec_V1_3_cts_only/concat_invalid_rank.example.cpp"
        "generated/spec_V1_3_cts_only/conv2d_v1_3_invalid_rank.example.cpp"
        "generated/spec_V1_3_cts_only/if_simple_unknown_dimension.example.cpp"
        "generated/spec_V1_3_cts_only/if_simple_unknown_rank.example.cpp"
        "generated/spec_V1_3_cts_only/while_fib_unknown_dimension.example.cpp"
        "generated/spec_V1_3_cts_only/while_fib_unknown_rank.example.cpp"
    ];
    include_dirs = [
        "frameworks/ml/nn/common/include"
        "frameworks/ml/nn/runtime/"
        "frameworks/ml/nn/runtime/include/"
        "frameworks/ml/nn/tools/test_generator/test_harness/include"
    ];
    cflags = [
        "-DNNTEST_CTS"
        "-DNNTEST_ONLY_PUBLIC_API"
        "-UNDEBUG"
        "-Wall"
        "-Werror"
    ];
    shared_libs = [
        "libandroid"
        "liblog"
        "libneuralnetworks"
    ];
    static_libs = [
        "libbase_ndk"
        "libgmock_ndk"
        "libgtest_ndk_c++"
    ];
    sdk_version = "current";
    stl = "c++_static";
};

neuralnetworks_generated_V1_0_example = cc_library_static {
    name = "neuralnetworks_generated_V1_0_example";
    defaults = ["neuralnetworks_float16"];
    srcs = [
        "generated/spec_V1_0/add.example.cpp"
        "generated/spec_V1_0/add_broadcast_quant8.example.cpp"
        "generated/spec_V1_0/add_quant8.example.cpp"
        "generated/spec_V1_0/avg_pool_float_1.example.cpp"
        "generated/spec_V1_0/avg_pool_float_2.example.cpp"
        "generated/spec_V1_0/avg_pool_float_3.example.cpp"
        "generated/spec_V1_0/avg_pool_float_4.example.cpp"
        "generated/spec_V1_0/avg_pool_float_5.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_1.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_2.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_3.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_4.example.cpp"
        "generated/spec_V1_0/avg_pool_quant8_5.example.cpp"
        "generated/spec_V1_0/concat_float_1.example.cpp"
        "generated/spec_V1_0/concat_float_2.example.cpp"
        "generated/spec_V1_0/concat_float_3.example.cpp"
        "generated/spec_V1_0/concat_quant8_1.example.cpp"
        "generated/spec_V1_0/concat_quant8_2.example.cpp"
        "generated/spec_V1_0/concat_quant8_3.example.cpp"
        "generated/spec_V1_0/conv_1_h3_w2_SAME.example.cpp"
        "generated/spec_V1_0/conv_1_h3_w2_VALID.example.cpp"
        "generated/spec_V1_0/conv_3_h3_w2_SAME.example.cpp"
        "generated/spec_V1_0/conv_3_h3_w2_VALID.example.cpp"
        "generated/spec_V1_0/conv_float.example.cpp"
        "generated/spec_V1_0/conv_float_2.example.cpp"
        "generated/spec_V1_0/conv_float_channels.example.cpp"
        "generated/spec_V1_0/conv_float_channels_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_float_large.example.cpp"
        "generated/spec_V1_0/conv_float_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_float_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8.example.cpp"
        "generated/spec_V1_0/conv_quant8_2.example.cpp"
        "generated/spec_V1_0/conv_quant8_channels.example.cpp"
        "generated/spec_V1_0/conv_quant8_channels_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8_large.example.cpp"
        "generated/spec_V1_0/conv_quant8_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8_overflow.example.cpp"
        "generated/spec_V1_0/conv_quant8_overflow_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/conv_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depth_to_space_float_1.example.cpp"
        "generated/spec_V1_0/depth_to_space_float_2.example.cpp"
        "generated/spec_V1_0/depth_to_space_float_3.example.cpp"
        "generated/spec_V1_0/depth_to_space_quant8_1.example.cpp"
        "generated/spec_V1_0/depth_to_space_quant8_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large_2_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_float_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_2.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_large.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/depthwise_conv2d_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/dequantize.example.cpp"
        "generated/spec_V1_0/embedding_lookup.example.cpp"
        "generated/spec_V1_0/floor.example.cpp"
        "generated/spec_V1_0/fully_connected_float.example.cpp"
        "generated/spec_V1_0/fully_connected_float_2.example.cpp"
        "generated/spec_V1_0/fully_connected_float_3.example.cpp"
        "generated/spec_V1_0/fully_connected_float_large.example.cpp"
        "generated/spec_V1_0/fully_connected_float_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/fully_connected_float_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_2.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_large.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_large_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/fully_connected_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/hashtable_lookup_float.example.cpp"
        "generated/spec_V1_0/hashtable_lookup_quant8.example.cpp"
        "generated/spec_V1_0/l2_normalization.example.cpp"
        "generated/spec_V1_0/l2_normalization_2.example.cpp"
        "generated/spec_V1_0/l2_normalization_large.example.cpp"
        "generated/spec_V1_0/l2_pool_float.example.cpp"
        "generated/spec_V1_0/l2_pool_float_2.example.cpp"
        "generated/spec_V1_0/l2_pool_float_large.example.cpp"
        "generated/spec_V1_0/local_response_norm_float_1.example.cpp"
        "generated/spec_V1_0/local_response_norm_float_4.example.cpp"
        "generated/spec_V1_0/logistic_float_1.example.cpp"
        "generated/spec_V1_0/logistic_float_2.example.cpp"
        "generated/spec_V1_0/logistic_quant8_1.example.cpp"
        "generated/spec_V1_0/logistic_quant8_2.example.cpp"
        "generated/spec_V1_0/lsh_projection.example.cpp"
        "generated/spec_V1_0/lsh_projection_2.example.cpp"
        "generated/spec_V1_0/lsh_projection_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/lstm.example.cpp"
        "generated/spec_V1_0/lstm2.example.cpp"
        "generated/spec_V1_0/lstm2_state.example.cpp"
        "generated/spec_V1_0/lstm2_state2.example.cpp"
        "generated/spec_V1_0/lstm3.example.cpp"
        "generated/spec_V1_0/lstm3_state.example.cpp"
        "generated/spec_V1_0/lstm3_state2.example.cpp"
        "generated/spec_V1_0/lstm3_state3.example.cpp"
        "generated/spec_V1_0/lstm_state.example.cpp"
        "generated/spec_V1_0/lstm_state2.example.cpp"
        "generated/spec_V1_0/max_pool_float_1.example.cpp"
        "generated/spec_V1_0/max_pool_float_2.example.cpp"
        "generated/spec_V1_0/max_pool_float_3.example.cpp"
        "generated/spec_V1_0/max_pool_float_4.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_1.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_2.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_3.example.cpp"
        "generated/spec_V1_0/max_pool_quant8_4.example.cpp"
        "generated/spec_V1_0/mobilenet_224_gender_basic_fixed.example.cpp"
        "generated/spec_V1_0/mobilenet_quantized.example.cpp"
        "generated/spec_V1_0/mul.example.cpp"
        "generated/spec_V1_0/mul_broadcast_quant8.example.cpp"
        "generated/spec_V1_0/mul_quant8.example.cpp"
        "generated/spec_V1_0/mul_relu.example.cpp"
        "generated/spec_V1_0/relu1_float_1.example.cpp"
        "generated/spec_V1_0/relu1_float_2.example.cpp"
        "generated/spec_V1_0/relu1_quant8_1.example.cpp"
        "generated/spec_V1_0/relu1_quant8_2.example.cpp"
        "generated/spec_V1_0/relu6_float_1.example.cpp"
        "generated/spec_V1_0/relu6_float_2.example.cpp"
        "generated/spec_V1_0/relu6_quant8_1.example.cpp"
        "generated/spec_V1_0/relu6_quant8_2.example.cpp"
        "generated/spec_V1_0/relu_float_1.example.cpp"
        "generated/spec_V1_0/relu_float_2.example.cpp"
        "generated/spec_V1_0/relu_quant8_1.example.cpp"
        "generated/spec_V1_0/relu_quant8_2.example.cpp"
        "generated/spec_V1_0/reshape.example.cpp"
        "generated/spec_V1_0/reshape_quant8.example.cpp"
        "generated/spec_V1_0/reshape_quant8_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/reshape_weights_as_inputs.example.cpp"
        "generated/spec_V1_0/resize_bilinear.example.cpp"
        "generated/spec_V1_0/resize_bilinear_2.example.cpp"
        "generated/spec_V1_0/rnn.example.cpp"
        "generated/spec_V1_0/rnn_state.example.cpp"
        "generated/spec_V1_0/softmax_float_1.example.cpp"
        "generated/spec_V1_0/softmax_float_2.example.cpp"
        "generated/spec_V1_0/softmax_quant8_1.example.cpp"
        "generated/spec_V1_0/softmax_quant8_2.example.cpp"
        "generated/spec_V1_0/space_to_depth_float_1.example.cpp"
        "generated/spec_V1_0/space_to_depth_float_2.example.cpp"
        "generated/spec_V1_0/space_to_depth_float_3.example.cpp"
        "generated/spec_V1_0/space_to_depth_quant8_1.example.cpp"
        "generated/spec_V1_0/space_to_depth_quant8_2.example.cpp"
        "generated/spec_V1_0/svdf.example.cpp"
        "generated/spec_V1_0/svdf2.example.cpp"
        "generated/spec_V1_0/svdf_bias_present.example.cpp"
        "generated/spec_V1_0/svdf_state.example.cpp"
        "generated/spec_V1_0/tanh.example.cpp"
    ];
    static_libs = ["libneuralnetworks_generated_test_harness"];
};

neuralnetworks_generated_V1_1_example = cc_library_static {
    name = "neuralnetworks_generated_V1_1_example";
    defaults = ["neuralnetworks_float16"];
    srcs = [
        "generated/spec_V1_1/add_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/avg_pool_float_5_relaxed.example.cpp"
        "generated/spec_V1_1/batch_to_space.example.cpp"
        "generated/spec_V1_1/batch_to_space_float_1.example.cpp"
        "generated/spec_V1_1/batch_to_space_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/batch_to_space_quant8_1.example.cpp"
        "generated/spec_V1_1/batch_to_space_relaxed.example.cpp"
        "generated/spec_V1_1/concat_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/concat_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/concat_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/conv_1_h3_w2_SAME_relaxed.example.cpp"
        "generated/spec_V1_1/conv_1_h3_w2_VALID_relaxed.example.cpp"
        "generated/spec_V1_1/conv_3_h3_w2_SAME_relaxed.example.cpp"
        "generated/spec_V1_1/conv_3_h3_w2_VALID_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_channels_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_channels_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_large_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_relaxed.example.cpp"
        "generated/spec_V1_1/conv_float_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depth_to_space_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/depth_to_space_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/depth_to_space_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_2_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_2_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_large_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv2d_float_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/depthwise_conv_relaxed.example.cpp"
        "generated/spec_V1_1/dequantize_relaxed.example.cpp"
        "generated/spec_V1_1/div.example.cpp"
        "generated/spec_V1_1/div_broadcast_float.example.cpp"
        "generated/spec_V1_1/div_broadcast_float_relaxed.example.cpp"
        "generated/spec_V1_1/div_relaxed.example.cpp"
        "generated/spec_V1_1/embedding_lookup_relaxed.example.cpp"
        "generated/spec_V1_1/floor_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_4d_simple.example.cpp"
        "generated/spec_V1_1/fully_connected_float_4d_simple_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_large_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_relaxed.example.cpp"
        "generated/spec_V1_1/fully_connected_float_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/hashtable_lookup_float_relaxed.example.cpp"
        "generated/spec_V1_1/l2_normalization_2_relaxed.example.cpp"
        "generated/spec_V1_1/l2_normalization_large_relaxed.example.cpp"
        "generated/spec_V1_1/l2_normalization_relaxed.example.cpp"
        "generated/spec_V1_1/l2_pool_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/l2_pool_float_large_relaxed.example.cpp"
        "generated/spec_V1_1/l2_pool_float_relaxed.example.cpp"
        "generated/spec_V1_1/local_response_norm_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/local_response_norm_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/logistic_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/logistic_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/lsh_projection_2_relaxed.example.cpp"
        "generated/spec_V1_1/lsh_projection_relaxed.example.cpp"
        "generated/spec_V1_1/lsh_projection_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/lstm2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm2_state2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm2_state_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_state2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_state3_relaxed.example.cpp"
        "generated/spec_V1_1/lstm3_state_relaxed.example.cpp"
        "generated/spec_V1_1/lstm_relaxed.example.cpp"
        "generated/spec_V1_1/lstm_state2_relaxed.example.cpp"
        "generated/spec_V1_1/lstm_state_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/max_pool_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/mean.example.cpp"
        "generated/spec_V1_1/mean_b155508675.example.cpp"
        "generated/spec_V1_1/mean_float_1.example.cpp"
        "generated/spec_V1_1/mean_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/mean_float_2.example.cpp"
        "generated/spec_V1_1/mean_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/mean_quant8_1.example.cpp"
        "generated/spec_V1_1/mean_quant8_2.example.cpp"
        "generated/spec_V1_1/mean_relaxed.example.cpp"
        "generated/spec_V1_1/mobilenet_224_gender_basic_fixed_relaxed.example.cpp"
        "generated/spec_V1_1/mul_relaxed.example.cpp"
        "generated/spec_V1_1/mul_relu_relaxed.example.cpp"
        "generated/spec_V1_1/pad.example.cpp"
        "generated/spec_V1_1/pad_float_1.example.cpp"
        "generated/spec_V1_1/pad_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/pad_relaxed.example.cpp"
        "generated/spec_V1_1/relu1_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/relu1_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/relu6_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/relu6_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/relu_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/relu_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/reshape_b138150365.example.cpp"
        "generated/spec_V1_1/reshape_relaxed.example.cpp"
        "generated/spec_V1_1/reshape_weights_as_inputs_relaxed.example.cpp"
        "generated/spec_V1_1/resize_bilinear_2_relaxed.example.cpp"
        "generated/spec_V1_1/resize_bilinear_relaxed.example.cpp"
        "generated/spec_V1_1/rnn_relaxed.example.cpp"
        "generated/spec_V1_1/rnn_state_relaxed.example.cpp"
        "generated/spec_V1_1/softmax_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/softmax_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_1.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_2.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_3.example.cpp"
        "generated/spec_V1_1/space_to_batch_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_batch_quant8_1.example.cpp"
        "generated/spec_V1_1/space_to_batch_quant8_2.example.cpp"
        "generated/spec_V1_1/space_to_batch_quant8_3.example.cpp"
        "generated/spec_V1_1/space_to_batch_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_depth_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_depth_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/space_to_depth_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/squeeze.example.cpp"
        "generated/spec_V1_1/squeeze_b155238914.example.cpp"
        "generated/spec_V1_1/squeeze_float_1.example.cpp"
        "generated/spec_V1_1/squeeze_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/squeeze_omitted.example.cpp"
        "generated/spec_V1_1/squeeze_quant8_1.example.cpp"
        "generated/spec_V1_1/squeeze_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice.example.cpp"
        "generated/spec_V1_1/strided_slice_b155662254.example.cpp"
        "generated/spec_V1_1/strided_slice_float_1.example.cpp"
        "generated/spec_V1_1/strided_slice_float_10.example.cpp"
        "generated/spec_V1_1/strided_slice_float_10_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_11.example.cpp"
        "generated/spec_V1_1/strided_slice_float_11_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_2.example.cpp"
        "generated/spec_V1_1/strided_slice_float_2_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_3.example.cpp"
        "generated/spec_V1_1/strided_slice_float_3_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_4.example.cpp"
        "generated/spec_V1_1/strided_slice_float_4_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_5.example.cpp"
        "generated/spec_V1_1/strided_slice_float_5_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_6.example.cpp"
        "generated/spec_V1_1/strided_slice_float_6_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_7.example.cpp"
        "generated/spec_V1_1/strided_slice_float_7_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_8.example.cpp"
        "generated/spec_V1_1/strided_slice_float_8_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_float_9.example.cpp"
        "generated/spec_V1_1/strided_slice_float_9_relaxed.example.cpp"
        "generated/spec_V1_1/strided_slice_qaunt8_10.example.cpp"
        "generated/spec_V1_1/strided_slice_qaunt8_11.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_1.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_2.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_3.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_4.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_5.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_6.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_7.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_8.example.cpp"
        "generated/spec_V1_1/strided_slice_quant8_9.example.cpp"
        "generated/spec_V1_1/strided_slice_relaxed.example.cpp"
        "generated/spec_V1_1/sub.example.cpp"
        "generated/spec_V1_1/sub_broadcast_float.example.cpp"
        "generated/spec_V1_1/sub_broadcast_float_relaxed.example.cpp"
        "generated/spec_V1_1/sub_relaxed.example.cpp"
        "generated/spec_V1_1/svdf2_relaxed.example.cpp"
        "generated/spec_V1_1/svdf_bias_present_relaxed.example.cpp"
        "generated/spec_V1_1/svdf_relaxed.example.cpp"
        "generated/spec_V1_1/svdf_state_relaxed.example.cpp"
        "generated/spec_V1_1/tanh_relaxed.example.cpp"
        "generated/spec_V1_1/transpose.example.cpp"
        "generated/spec_V1_1/transpose_float_1.example.cpp"
        "generated/spec_V1_1/transpose_float_1_relaxed.example.cpp"
        "generated/spec_V1_1/transpose_quant8_1.example.cpp"
        "generated/spec_V1_1/transpose_relaxed.example.cpp"
    ];
    static_libs = ["libneuralnetworks_generated_test_harness"];
};

neuralnetworks_generated_V1_2_example = cc_library_static {
    name = "neuralnetworks_generated_V1_2_example";
    defaults = ["neuralnetworks_float16"];
    srcs = [
        "generated/spec_V1_2/abs.example.cpp"
        "generated/spec_V1_2/add_v1_2.example.cpp"
        "generated/spec_V1_2/argmax_1.example.cpp"
        "generated/spec_V1_2/argmax_2.example.cpp"
        "generated/spec_V1_2/argmax_3.example.cpp"
        "generated/spec_V1_2/argmax_b155660285.example.cpp"
        "generated/spec_V1_2/argmin_1.example.cpp"
        "generated/spec_V1_2/argmin_2.example.cpp"
        "generated/spec_V1_2/argmin_3.example.cpp"
        "generated/spec_V1_2/argmin_b155660285.example.cpp"
        "generated/spec_V1_2/avg_pool_v1_2.example.cpp"
        "generated/spec_V1_2/axis_aligned_bbox_transform.example.cpp"
        "generated/spec_V1_2/batch_to_space_v1_2.example.cpp"
        "generated/spec_V1_2/bbox_graph.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_aux_input.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_cifg_peephole.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_float16_batch_major.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_float16_batch_major_aux_input.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_float16_batch_major_merge_outputs.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_merge_outputs.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_lstm_norm_fw_output.example.cpp"
        "generated/spec_V1_2/bidirectional_sequence_rnn.example.cpp"
        "generated/spec_V1_2/box_with_nms_limit_gaussian.example.cpp"
        "generated/spec_V1_2/box_with_nms_limit_hard.example.cpp"
        "generated/spec_V1_2/box_with_nms_limit_linear.example.cpp"
        "generated/spec_V1_2/cast.example.cpp"
        "generated/spec_V1_2/channel_shuffle.example.cpp"
        "generated/spec_V1_2/concat_float16_1.example.cpp"
        "generated/spec_V1_2/concat_float16_2.example.cpp"
        "generated/spec_V1_2/concat_float16_3.example.cpp"
        "generated/spec_V1_2/concat_mixed_quant.example.cpp"
        "generated/spec_V1_2/concat_zero_sized.example.cpp"
        "generated/spec_V1_2/conv2d_dilation.example.cpp"
        "generated/spec_V1_2/conv2d_per_channel.example.cpp"
        "generated/spec_V1_2/conv2d_v1_2.example.cpp"
        "generated/spec_V1_2/depth_to_space_v1_2.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_dilation.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_invalid_filter_dims.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_per_channel.example.cpp"
        "generated/spec_V1_2/depthwise_conv2d_v1_2.example.cpp"
        "generated/spec_V1_2/dequantize_v1_2.example.cpp"
        "generated/spec_V1_2/detection_postprocess.example.cpp"
        "generated/spec_V1_2/div_v1_2.example.cpp"
        "generated/spec_V1_2/embedding_lookup_v1_2.example.cpp"
        "generated/spec_V1_2/equal.example.cpp"
        "generated/spec_V1_2/exp.example.cpp"
        "generated/spec_V1_2/expand_dims.example.cpp"
        "generated/spec_V1_2/floor_float16.example.cpp"
        "generated/spec_V1_2/fully_connected_v1_2.example.cpp"
        "generated/spec_V1_2/gather.example.cpp"
        "generated/spec_V1_2/gather_higher_rank.example.cpp"
        "generated/spec_V1_2/generate_proposals.example.cpp"
        "generated/spec_V1_2/greater.example.cpp"
        "generated/spec_V1_2/greater_equal.example.cpp"
        "generated/spec_V1_2/grouped_conv2d.example.cpp"
        "generated/spec_V1_2/heatmap_max_keypoint.example.cpp"
        "generated/spec_V1_2/instance_normalization.example.cpp"
        "generated/spec_V1_2/l2_normalization_axis.example.cpp"
        "generated/spec_V1_2/l2_normalization_v1_2.example.cpp"
        "generated/spec_V1_2/l2_pool_v1_2.example.cpp"
        "generated/spec_V1_2/layer_norm_lstm.example.cpp"
        "generated/spec_V1_2/less.example.cpp"
        "generated/spec_V1_2/less_equal.example.cpp"
        "generated/spec_V1_2/local_response_normalization_v1_2.example.cpp"
        "generated/spec_V1_2/log.example.cpp"
        "generated/spec_V1_2/log_softmax.example.cpp"
        "generated/spec_V1_2/logical_and.example.cpp"
        "generated/spec_V1_2/logical_not.example.cpp"
        "generated/spec_V1_2/logical_or.example.cpp"
        "generated/spec_V1_2/logistic_v1_2.example.cpp"
        "generated/spec_V1_2/lsh_projection_3_relaxed.example.cpp"
        "generated/spec_V1_2/lsh_projection_4_relaxed.example.cpp"
        "generated/spec_V1_2/lsh_projection_deprecated.example.cpp"
        "generated/spec_V1_2/lsh_projection_float16.example.cpp"
        "generated/spec_V1_2/lstm2_float16.example.cpp"
        "generated/spec_V1_2/lstm2_state2_float16.example.cpp"
        "generated/spec_V1_2/lstm2_state_float16.example.cpp"
        "generated/spec_V1_2/lstm3_float16.example.cpp"
        "generated/spec_V1_2/lstm3_state2_float16.example.cpp"
        "generated/spec_V1_2/lstm3_state3_float16.example.cpp"
        "generated/spec_V1_2/lstm3_state_float16.example.cpp"
        "generated/spec_V1_2/lstm_float16.example.cpp"
        "generated/spec_V1_2/lstm_state2_float16.example.cpp"
        "generated/spec_V1_2/lstm_state_float16.example.cpp"
        "generated/spec_V1_2/max_pool_v1_2.example.cpp"
        "generated/spec_V1_2/maximum.example.cpp"
        "generated/spec_V1_2/mean_float16.example.cpp"
        "generated/spec_V1_2/minimum.example.cpp"
        "generated/spec_V1_2/mul_v1_2.example.cpp"
        "generated/spec_V1_2/neg.example.cpp"
        "generated/spec_V1_2/not_equal.example.cpp"
        "generated/spec_V1_2/pad_all_dims.example.cpp"
        "generated/spec_V1_2/pad_float16.example.cpp"
        "generated/spec_V1_2/pad_low_rank.example.cpp"
        "generated/spec_V1_2/pad_low_rank_quant8.example.cpp"
        "generated/spec_V1_2/pad_quant8.example.cpp"
        "generated/spec_V1_2/pad_quant8_nonzero.example.cpp"
        "generated/spec_V1_2/pad_v2_1_float.example.cpp"
        "generated/spec_V1_2/pad_v2_1_quant8.example.cpp"
        "generated/spec_V1_2/pad_v2_all_dims.example.cpp"
        "generated/spec_V1_2/pad_v2_all_dims_quant8.example.cpp"
        "generated/spec_V1_2/pad_v2_low_rank.example.cpp"
        "generated/spec_V1_2/pad_v2_low_rank_quant8.example.cpp"
        "generated/spec_V1_2/pow.example.cpp"
        "generated/spec_V1_2/prelu.example.cpp"
        "generated/spec_V1_2/quantize.example.cpp"
        "generated/spec_V1_2/quantized_lstm.example.cpp"
        "generated/spec_V1_2/random_multinomial.example.cpp"
        "generated/spec_V1_2/random_multinomial_float16.example.cpp"
        "generated/spec_V1_2/reduce_all.example.cpp"
        "generated/spec_V1_2/reduce_all_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_any.example.cpp"
        "generated/spec_V1_2/reduce_any_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_max.example.cpp"
        "generated/spec_V1_2/reduce_max_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_min.example.cpp"
        "generated/spec_V1_2/reduce_min_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_prod.example.cpp"
        "generated/spec_V1_2/reduce_prod_b155508675.example.cpp"
        "generated/spec_V1_2/reduce_sum.example.cpp"
        "generated/spec_V1_2/reduce_sum_b155508675.example.cpp"
        "generated/spec_V1_2/relu1_v1_2.example.cpp"
        "generated/spec_V1_2/relu6_v1_2.example.cpp"
        "generated/spec_V1_2/relu_v1_2.example.cpp"
        "generated/spec_V1_2/reshape_float16.example.cpp"
        "generated/spec_V1_2/resize_bilinear_v1_2.example.cpp"
        "generated/spec_V1_2/resize_nearest_neighbor.example.cpp"
        "generated/spec_V1_2/rnn_float16.example.cpp"
        "generated/spec_V1_2/roi_align.example.cpp"
        "generated/spec_V1_2/roi_pooling.example.cpp"
        "generated/spec_V1_2/rsqrt.example.cpp"
        "generated/spec_V1_2/select_v1_2.example.cpp"
        "generated/spec_V1_2/sin.example.cpp"
        "generated/spec_V1_2/slice.example.cpp"
        "generated/spec_V1_2/softmax_v1_2.example.cpp"
        "generated/spec_V1_2/space_to_batch_quant8_nonzero.example.cpp"
        "generated/spec_V1_2/space_to_batch_v1_2.example.cpp"
        "generated/spec_V1_2/space_to_depth_v1_2.example.cpp"
        "generated/spec_V1_2/split_float_1.example.cpp"
        "generated/spec_V1_2/split_float_2.example.cpp"
        "generated/spec_V1_2/split_float_3.example.cpp"
        "generated/spec_V1_2/split_float_4.example.cpp"
        "generated/spec_V1_2/split_float_5.example.cpp"
        "generated/spec_V1_2/split_int32_1.example.cpp"
        "generated/spec_V1_2/split_int32_2.example.cpp"
        "generated/spec_V1_2/split_int32_3.example.cpp"
        "generated/spec_V1_2/split_int32_4.example.cpp"
        "generated/spec_V1_2/split_quant8_1.example.cpp"
        "generated/spec_V1_2/split_quant8_2.example.cpp"
        "generated/spec_V1_2/split_quant8_3.example.cpp"
        "generated/spec_V1_2/split_quant8_4.example.cpp"
        "generated/spec_V1_2/sqrt.example.cpp"
        "generated/spec_V1_2/squeeze_float16.example.cpp"
        "generated/spec_V1_2/strided_slice_float16.example.cpp"
        "generated/spec_V1_2/strided_slice_invalid.example.cpp"
        "generated/spec_V1_2/sub_quantized_different_scales.example.cpp"
        "generated/spec_V1_2/sub_v1_2.example.cpp"
        "generated/spec_V1_2/sub_v1_2_broadcast.example.cpp"
        "generated/spec_V1_2/svdf_bias_present_float16.example.cpp"
        "generated/spec_V1_2/svdf_float16.example.cpp"
        "generated/spec_V1_2/svdf_state_float16.example.cpp"
        "generated/spec_V1_2/tanh_v1_2.example.cpp"
        "generated/spec_V1_2/tile_1.example.cpp"
        "generated/spec_V1_2/tile_2.example.cpp"
        "generated/spec_V1_2/tile_3.example.cpp"
        "generated/spec_V1_2/topk_v2.example.cpp"
        "generated/spec_V1_2/transpose_conv2d.example.cpp"
        "generated/spec_V1_2/transpose_conv2d_large.example.cpp"
        "generated/spec_V1_2/transpose_float16.example.cpp"
        "generated/spec_V1_2/transpose_v1_2.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_1step.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_batch_major_norm_peephole_projection.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_batch_major_peephole_projection_bias.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_cifg_peephole.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_f16_batch_major.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_f16_norm_peephole_projection.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_layer_norm_cifg_peephole.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_lstm_norm_peephole_projection.example.cpp"
        "generated/spec_V1_2/unidirectional_sequence_rnn.example.cpp"
    ];
    static_libs = ["libneuralnetworks_generated_test_harness"];
};

neuralnetworks_generated_V1_3_example = cc_library_static {
    name = "neuralnetworks_generated_V1_3_example";
    defaults = ["neuralnetworks_float16"];
    srcs = [
        "generated/spec_V1_3/abs_int32.example.cpp"
        "generated/spec_V1_3/add_int32.example.cpp"
        "generated/spec_V1_3/add_quant8_signed.example.cpp"
        "generated/spec_V1_3/argmax_quant8_signed.example.cpp"
        "generated/spec_V1_3/argmin_quant8_signed.example.cpp"
        "generated/spec_V1_3/avg_pool_quant8_signed.example.cpp"
        "generated/spec_V1_3/axis_aligned_bbox_transform_quant8_signed.example.cpp"
        "generated/spec_V1_3/batch_to_space_quant8_signed.example.cpp"
        "generated/spec_V1_3/bbox_graph_quant8_signed.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_lstm.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_lstm_state_output.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_rnn_1_3.example.cpp"
        "generated/spec_V1_3/bidirectional_sequence_rnn_state_output.example.cpp"
        "generated/spec_V1_3/box_with_nms_limit_quant8_signed.example.cpp"
        "generated/spec_V1_3/cast_identity.example.cpp"
        "generated/spec_V1_3/channel_shuffle_quant8_signed.example.cpp"
        "generated/spec_V1_3/concat_quant8_signed.example.cpp"
        "generated/spec_V1_3/conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/depth_to_space_quant8_signed.example.cpp"
        "generated/spec_V1_3/depthwise_conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/dequantize_quant8_signed.example.cpp"
        "generated/spec_V1_3/div_int32.example.cpp"
        "generated/spec_V1_3/elu.example.cpp"
        "generated/spec_V1_3/embedding_lookup_quant8_signed.example.cpp"
        "generated/spec_V1_3/embedding_lookup_v1_3.example.cpp"
        "generated/spec_V1_3/equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/expand_dims_quant8_signed.example.cpp"
        "generated/spec_V1_3/fill.example.cpp"
        "generated/spec_V1_3/fully_connected_quant8_signed.example.cpp"
        "generated/spec_V1_3/gather_quant8_signed.example.cpp"
        "generated/spec_V1_3/generate_proposals_quant8_signed.example.cpp"
        "generated/spec_V1_3/greater_equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/greater_quant8_signed.example.cpp"
        "generated/spec_V1_3/grouped_conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/hard_swish.example.cpp"
        "generated/spec_V1_3/heatmap_max_keypoint_quant8_signed.example.cpp"
        "generated/spec_V1_3/if_constant.example.cpp"
        "generated/spec_V1_3/if_no_value.example.cpp"
        "generated/spec_V1_3/if_same_branch_model.example.cpp"
        "generated/spec_V1_3/if_simple.example.cpp"
        "generated/spec_V1_3/l2_normalization_quant8_signed.example.cpp"
        "generated/spec_V1_3/l2_normalization_zeros.example.cpp"
        "generated/spec_V1_3/less_equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/less_quant8_signed.example.cpp"
        "generated/spec_V1_3/logistic_quant8_signed.example.cpp"
        "generated/spec_V1_3/max_pool_quant8_signed.example.cpp"
        "generated/spec_V1_3/maximum_quant8_signed.example.cpp"
        "generated/spec_V1_3/mean_quant8_signed.example.cpp"
        "generated/spec_V1_3/minimum_quant8_signed.example.cpp"
        "generated/spec_V1_3/mul_int32.example.cpp"
        "generated/spec_V1_3/mul_quant8_signed.example.cpp"
        "generated/spec_V1_3/not_equal_quant8_signed.example.cpp"
        "generated/spec_V1_3/pad_quant8_signed.example.cpp"
        "generated/spec_V1_3/pow_same_shape.example.cpp"
        "generated/spec_V1_3/prelu_quant8_signed.example.cpp"
        "generated/spec_V1_3/qlstm_noprojection.example.cpp"
        "generated/spec_V1_3/qlstm_projection.example.cpp"
        "generated/spec_V1_3/quantize_quant8_signed.example.cpp"
        "generated/spec_V1_3/rank.example.cpp"
        "generated/spec_V1_3/reduce_max_quant8_signed.example.cpp"
        "generated/spec_V1_3/reduce_min_quant8_signed.example.cpp"
        "generated/spec_V1_3/relu1_quant8_signed.example.cpp"
        "generated/spec_V1_3/relu6_quant8_signed.example.cpp"
        "generated/spec_V1_3/relu_quant8_signed.example.cpp"
        "generated/spec_V1_3/reshape_quant8_signed.example.cpp"
        "generated/spec_V1_3/resize_bilinear_v1_3.example.cpp"
        "generated/spec_V1_3/resize_nearest_neighbor_v1_3.example.cpp"
        "generated/spec_V1_3/resize_quant8_signed.example.cpp"
        "generated/spec_V1_3/roi_align_quant8_signed.example.cpp"
        "generated/spec_V1_3/roi_pooling_quant8_signed.example.cpp"
        "generated/spec_V1_3/select_quant8_signed.example.cpp"
        "generated/spec_V1_3/slice_quant8_signed.example.cpp"
        "generated/spec_V1_3/softmax_quant8_signed.example.cpp"
        "generated/spec_V1_3/space_to_batch_quant8_signed.example.cpp"
        "generated/spec_V1_3/space_to_depth_quant8_signed.example.cpp"
        "generated/spec_V1_3/split_quant8_signed.example.cpp"
        "generated/spec_V1_3/squeeze_quant8_signed.example.cpp"
        "generated/spec_V1_3/strided_slice_quant8_signed.example.cpp"
        "generated/spec_V1_3/sub_int32.example.cpp"
        "generated/spec_V1_3/sub_quant8_signed.example.cpp"
        "generated/spec_V1_3/tanh_quant8_signed.example.cpp"
        "generated/spec_V1_3/tile_quant8_signed.example.cpp"
        "generated/spec_V1_3/topk_v2_quant8_signed.example.cpp"
        "generated/spec_V1_3/transpose_conv2d_quant8_signed.example.cpp"
        "generated/spec_V1_3/transpose_quant8_signed.example.cpp"
        "generated/spec_V1_3/unidirectional_sequence_lstm_layer_norm_cifg_peephole_state_output.example.cpp"
        "generated/spec_V1_3/unidirectional_sequence_rnn.example.cpp"
        "generated/spec_V1_3/while_fib.example.cpp"
        "generated/spec_V1_3/while_infinite_loop.example.cpp"
        "generated/spec_V1_3/while_sum_of_powers.example.cpp"
        "generated/spec_V1_3/while_sum_of_powers_quant8.example.cpp"
        "generated/spec_V1_3/while_sum_of_powers_quant8_signed.example.cpp"
    ];
    static_libs = ["libneuralnetworks_generated_test_harness"];
};

neuralnetworks_generated_V1_3_cts_only_example = cc_library_static {
    name = "neuralnetworks_generated_V1_3_cts_only_example";
    defaults = ["neuralnetworks_float16"];
    srcs = [
        "generated/spec_V1_3_cts_only/cast_mismatching_shapes.example.cpp"
        "generated/spec_V1_3_cts_only/concat_invalid_rank.example.cpp"
        "generated/spec_V1_3_cts_only/conv2d_v1_3_invalid_rank.example.cpp"
        "generated/spec_V1_3_cts_only/if_simple_unknown_dimension.example.cpp"
        "generated/spec_V1_3_cts_only/if_simple_unknown_rank.example.cpp"
        "generated/spec_V1_3_cts_only/while_fib_unknown_dimension.example.cpp"
        "generated/spec_V1_3_cts_only/while_fib_unknown_rank.example.cpp"
    ];
    static_libs = ["libneuralnetworks_generated_test_harness"];
};

in { inherit CtsNNAPITests_static NeuralNetworksTest_default_libs NeuralNetworksTest_defaults NeuralNetworksTest_mt_defaults NeuralNetworksTest_mt_static NeuralNetworksTest_mt_static_asan NeuralNetworksTest_shared_partial NeuralNetworksTest_static NeuralNetworksTest_static_asan NeuralNetworksTest_static_defaults NeuralNetworksTest_static_fuzzing NeuralNetworksTest_static_ubsan libneuralnetworks_fuzzer neuralnetworks_generated_V1_0_example neuralnetworks_generated_V1_1_example neuralnetworks_generated_V1_2_example neuralnetworks_generated_V1_3_cts_only_example neuralnetworks_generated_V1_3_example; }
